{"version":3,"sources":["utils.ts","data/schemas/utils.ts","data/schemas/failing-objects.ts","data/schemas/validator.ts","data/api.ts","data/enums.ts","icons/circle-full.svg","icons/cross.svg","icons/exclamation.svg","icons/tick.svg","components/status.tsx","components/failing-object.tsx","components/failing-object-list.tsx","components/validator.tsx","components/model.tsx","components/app.tsx","components/app-list.tsx","index.tsx"],"names":["trimLeadingSlash","str","replace","trimTrailingSlash","urlJoin","base","paths","end","pop","middle","map","join","leftPad","value","len","fill","console","assert","length","padLen","Error","repeat","monthNames","0","1","2","3","4","5","6","7","8","9","10","11","Map","integer","optional_integer","string","optional_string","ValidationError","message","name","schema","definitions","failingObject","required","Object","keys","properties","ajv","Ajv","compile","fromJSON","data","validate","JSON","stringify","errors","validationSummary","Status","API","window","location","href","fetchCSRFInfo","a","axios","get","response","defaults","xsrfHeaderName","csrf_header_name","xsrfCookieName","csrf_cookie_name","error","appLabel","modelName","setState","params","fetchValidators","ValidatorSchema","patchValidator","obj","put","id","fetchFailingObjectsForValidator","validator_id","next","url","FailingObjectSchema","prevState","results","patchFailingObject","_extends","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","cx","cy","r","strokeWidth","_ref","svgRef","title","props","viewBox","width","ref","ForwardRef","forwardRef","d","stroke","strokeLinecap","getStatusColour","status","onDark","PASSING","FAILING","UNINITIALIZED","EXCEPTION","WARNING","StatusIcon","icon","Circle","Tick","Cross","Exclamation","getIcon","getStatusContrastColour","React","className","StatusIndicator","style","color","updateFailingObject","property","setPage","patch","failingObj","catch","FailingObject","object_pk","comment","admin_page","allowed_to_fail","allowed_to_fail_justification","setValidators","setFailingObjectPage","prevText","setPrevText","textBox","handleTextBoxChange","event","text","textContent","setTimeout","current","padding","background","borderBottom","verticalAlign","fontSize","fontWeight","maxHeight","thin","rowSpan","rel","fontStyle","type","defaultChecked","onChange","validator","num_allowed_to_fail","num_failing","new_validator","updateAllowedToFail","checked","contentEditable","placeholder","onInput","onBlur","suppressContentEditableWarning","height","FailingObjectList","page","isLoading","setIsLoading","Spinner","animation","role","variant","margin","onClick","loadMoreStyle","textAlign","cursor","Validator","method_name","description","last_run_time","execution_time","num_passing","num_na","exc_type","exc_traceback","exc_obj_pk","totalObjectCount","isException","dateStr","totalValidated","totalUnvalidated","last_run_time_fmt","date","formatStr","formats","getFullYear","toString","slice","getMonth","getDate","getHours","getMinutes","getSeconds","entries","forEach","token","callback","RegExp","formatDate","Date","parse","defaultActiveKey","marginBottom","Toggle","as","eventKey","tableLayout","wide","col2","seconds","hrs","Math","floor","rem","min","sec","toFixed","formatSeconds","undefined","Collapse","language","docco","Model","validators","setTotalObjectCount","fetchTotalObjectCount","then","values","valinfo","App","models","minWidth","info","AppList","appList","result","app_label","app","model_name","push","aggregateStatus","parent","children","child","model","buildNestedValidatorSummary","position","left","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["\n\n/** remove leading '/' from a string */\nfunction trimLeadingSlash(str: string): string {\n    return str.replace(/^\\/+/, '');\n}\n\n\n/** remove trailing '/' from a string */\nfunction trimTrailingSlash(str: string): string {\n    return str.replace(/\\/+$/, '');\n}\n\n\ntype NonEmptyArray<T> = [T, ...T[]];\n\n\n/** join together a list of non-relative urls */\nexport function urlJoin(base: string, ...paths: NonEmptyArray<string>): string {\n    base = trimTrailingSlash(base);\n    const end = trimLeadingSlash(paths.pop() as string);\n    const middle = paths.map(trimLeadingSlash).map(trimTrailingSlash);\n    return [base, ...middle, end].join(\"/\");\n}\n\n\n/** return a new Date from a string */\nexport function parseDate(dateStr: string): Date {\n    return new Date(Date.parse(dateStr));\n}\n\n\n/** pad a string to a fixed length */\nfunction leftPad(value: string, len: number, fill: string = \"0\") {\n    console.assert(fill.length === 1);\n    const padLen = len - value.length;\n    if (padLen < 0) {\n        throw Error(\"value longer than fixed width\")\n    }\n    return fill.repeat(padLen) + value;\n}\n\n\nconst monthNames: {[index: number]: string} = {\n    0: \"Jan\", 1: \"Feb\", 2: \"Mar\", 3: \"Apr\", 4: \"May\", 5: \"Jun\",\n    6: \"Jul\", 7: \"Aug\", 8: \"Sep\", 9: \"Oct\", 10: \"Nov\", 11: \"Dec\",\n};\n\n\n/** format a date as a string */\nexport function formatDate(date: Date, formatStr: string): string {\n\n    const formats: {[token: string]: () => string} = {\n        \"%Y\": () => date.getFullYear().toString(),\n        \"%y\": () => leftPad(date.getFullYear().toString().slice(2), 2),\n        \"%mm\": () => monthNames[date.getMonth()],\n        \"%m\": () => leftPad(date.getMonth().toString(),2),\n        \"%d\": () => leftPad(date.getDate().toString(),2),\n        \"%H\": () => leftPad(date.getHours().toString(),2),\n        \"%M\": () => leftPad(date.getMinutes().toString(),2),\n        \"%S\": () => leftPad(date.getSeconds().toString(),2),\n    }\n\n    Object.entries(formats).forEach(([token, callback]) => {\n        formatStr = formatStr.replace(new RegExp(token, \"g\"), callback);\n    });\n\n    return formatStr;\n}\n\n\n/** format number of seconds as hh:mm:ss */\nexport function formatSeconds(seconds: number | null): string {\n    if (seconds === null) {\n        return \"N/A\"\n    }\n    let hrs = leftPad(Math.floor(seconds / 3600).toString(), 2);\n    let rem = seconds % 3600;\n    let min = leftPad(Math.floor(rem / 60).toString(), 2);\n    let sec = leftPad((rem % 60).toFixed(1), 4)\n    return `${hrs}:${min}:${sec}s`;\n}\n\n\n/** implementation of pythons collections.defaultdict */\nexport class DefaultDict<T extends string | number, U> extends Map<T, U> {\n    defaultFactory: () => U;\n\n    constructor(defaultFactory: () => U) {\n        super();\n        this.defaultFactory = defaultFactory;\n    }\n\n    get(key: T): U {\n        if (this.has(key)) {\n            return super.get(key) as U;\n        } else {\n            const value = this.defaultFactory();\n            this.set(key, value);\n            return value;\n        }\n    }\n}\n","export const bool = {\"type\": \"boolean\"};\nexport const integer = {\"type\": \"integer\"};\nexport const optional_integer = {\"type\": [\"integer\", \"null\"]};\nexport const string = {\"type\": \"string\"};\nexport const optional_string = {\"type\": [\"string\", \"null\"]};\nexport const optional_number = {\"type\": [\"number\", \"null\"]};\n\nexport class ValidationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ValidationError';\n  }\n}\n\nexport type ValiationResult<T> = T | Error;\n\n","import Ajv from \"ajv\";\nimport {IFailingObjectPage} from \"../interfaces\";\n\nimport {\n    bool, integer, string, optional_string, ValidationError\n} from \"./utils\";\n\n\nconst schema = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"next\": optional_string,\n        \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/definitions/failingObject\",\n            },\n        }\n    },\n    \"additionalProperties\": true,\n    \"required\": [\"next\", \"results\"],\n    \"definitions\": {\n        \"failingObject\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"id\": integer,\n                \"validator\": integer,\n                \"object_pk\": integer,\n                \"allowed_to_fail\": bool,\n                \"allowed_to_fail_justification\": string,\n                \"comment\": string,\n                \"admin_page\": string,\n            },\n            \"additionalProperties\": false,\n            \"required\": [] as string[],\n        }\n    }\n}\nschema.definitions.failingObject.required =\n    Object.keys(schema.definitions.failingObject.properties);\n\nconst ajv = new Ajv().compile(schema)\n\nexport function validate(data: any): data is IFailingObjectPage {\n    return ajv(data) as boolean;\n}\n\nexport function fromJSON(data: any): IFailingObjectPage {\n    if (validate(data)) {\n        return data;\n    } else {\n        throw new ValidationError(`invalid data: ${JSON.stringify(ajv.errors)}`)\n    }\n}","import Ajv from \"ajv\";\nimport {IValidator} from \"../interfaces\";\n\nimport {\n    integer, string, optional_integer, optional_string,\n    optional_number, ValidationError,\n} from \"./utils\";\n\n\nconst schema = {\n    \"type\": \"array\",\n    \"items\": {\n        \"$ref\": \"#/definitions/validationSummary\"\n    },\n    \"definitions\": {\n        \"validationSummary\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"id\": integer,\n                \"app_label\": string,\n                \"model_name\": string,\n                \"method_name\": string,\n                \"description\": string,\n                \"last_run_time\": optional_string,\n                \"execution_time\": optional_number,\n                \"status\": integer,\n                \"num_passing\": optional_integer,\n                \"num_failing\": optional_integer,\n                \"num_na\": optional_integer,\n                \"num_allowed_to_fail\": optional_integer,\n                \"exc_type\": optional_string,\n                \"exc_traceback\": optional_string,\n                \"exc_obj_pk\": optional_integer,\n            },\n            \"additionalProperties\": false,\n            \"required\": [] as string[],\n        },\n    }\n}\nschema.definitions.validationSummary.required =\n    Object.keys(schema.definitions.validationSummary.properties);\n\nconst ajv = new Ajv().compile(schema);\n\nexport function validate(data: any): data is IValidator[] {\n    return ajv(data) as boolean;\n}\n\nexport function fromJSON(data: any): IValidator[] {\n    if (validate(data)) {\n        return data;\n    } else {\n        throw new ValidationError(`invalid data: ${JSON.stringify(ajv.errors)}`);\n    }\n}\n","import {Dispatch, SetStateAction} from 'react';\nimport axios, {AxiosResponse} from \"axios\";\n\nimport {urlJoin} from \"../utils\";\nimport {IFailingObject, IFailingObjectPage, IValidator} from \"./interfaces\";\nimport * as FailingObjectSchema from \"./schemas/failing-objects\";\nimport * as ValidatorSchema from \"./schemas/validator\";\n\n\nconst API = urlJoin(window.location.href, \"/api/\");\n\n\n/**\n * fetch the name of the CSRF header and cookie for the particular\n * django project\n *\n * If the django project enables CSRF (which it does by default) then\n * the csrf token is required to make requests\n */\nexport async function fetchCSRFInfo() {\n    try {\n        const response = await axios.get(urlJoin(API, \"meta/csrf/\"));\n        axios.defaults.xsrfHeaderName = response.data.csrf_header_name;\n        axios.defaults.xsrfCookieName = response.data.csrf_cookie_name;\n    } catch (e) {\n        console.error(\"[fetchCSRFInfo]\", e);\n    }\n}\n\n\n/**\n * fetch the total number of objects for a given django model.\n *\n * Counting the total number of records in a database table typically\n * requires a sequential scan, which can be quite slow. Therefore we\n * fetch this via ajax for each individual model. If one table is too\n * large/slow to count then this will hit a timeout exception and we\n * only miss that piece of data.\n */\nexport async function fetchTotalObjectCount(\n    appLabel: string, modelName: string,\n    setState: Dispatch<SetStateAction<number|null>>\n) {\n    try {\n        const response = await axios.get(\n            urlJoin(API, \"meta/object-counts/\"),\n            {params: {appLabel, modelName}}\n        );\n        setState(response.data);\n    } catch (e) {\n        console.error(\"[fetchTotalObjectCount]\", e);\n    }\n}\n\n\n/**\n * fetch the list of Validators\n */\nexport async function fetchValidators(\n    setState: Dispatch<SetStateAction<IValidator[]>>\n) {\n    try {\n        const response = await axios.get(urlJoin(API, \"validator-summary/\"));\n        setState(ValidatorSchema.fromJSON(response.data));\n    } catch (e) {\n        console.error(\"[fetchValidators]\", e);\n    }\n}\n\n\n/**\n * patch a Validator\n */\nexport async function patchValidator(obj: IValidator) {\n    try {\n        await axios.put(\n            urlJoin(API, `validator-summary/${obj.id}/`), obj\n        );\n    } catch (e) {\n        console.error(\"[patchValidator]\", e);\n    }\n}\n\n\n/**\n * fetch the list of FailingObjects for a given Validator.\n *\n * /api/failing-objects/ returns paginated results. To get the next\n * page of results this method is called with validator_id=null, and\n * next=the url that was returned by the endpoint on the previous call\n */\nexport async function fetchFailingObjectsForValidator(\n    validator_id: number | null,\n    next: string | null,\n    setState: Dispatch<SetStateAction<IFailingObjectPage>>\n) {\n    try {\n        let response: AxiosResponse;\n        if (validator_id !== null) {\n            const url = urlJoin(API, \"failing-objects/\")\n            response = await axios.get(url, {params: {validator_id}});\n        } else if (next !== null) {\n            response = await axios.get(next);\n        } else {\n            console.error(\"validator_id and next cannot both be null!\");\n            return;\n        }\n        // don't replace the state, add the next page of results\n        const data = FailingObjectSchema.fromJSON(response.data);\n        setState(prevState => ({\n            results: [...prevState.results, ...data.results],\n            next: data.next\n        }));\n    } catch (e) {\n        console.error(\"[fetchFailingObjectsForValidator]\", e);\n    }\n}\n\n\n/**\n * patch a FailingObject\n */\nexport async function patchFailingObject(obj: IFailingObject) {\n    try {\n        await axios.put(\n            urlJoin(API, `failing-objects/${obj.id}/`), obj\n        );\n    } catch (e) {\n        console.error(\"[patchFailingObject]\", e);\n    }\n}\n\n\n\n","export enum Status {\n    UNINITIALIZED = 0,\n    PASSING = 1,\n    FAILING = 2,\n    EXCEPTION = 3,\n    WARNING = 4,\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 12,\n  cy: 12,\n  r: 11,\n  strokeWidth: 0\n});\n\nvar SvgCircleFull = function SvgCircleFull(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    width: \"100%\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCircleFull, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default \"/static/datavalidation/admin/static/media/circle-full.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 12,\n  cy: 12,\n  r: 11,\n  strokeWidth: 0\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M 9 9 L 15 15\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M 15 9 L 9 15\"\n}));\n\nvar SvgCross = function SvgCross(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    width: \"100%\",\n    stroke: \"white\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCross, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default \"/static/datavalidation/admin/static/media/cross.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 12,\n  cy: 12,\n  r: 11,\n  strokeWidth: 0\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M 12 6 L 12 14\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M 12 18 L 12 18\"\n}));\n\nvar SvgExclamation = function SvgExclamation(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    width: \"100%\",\n    stroke: \"white\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgExclamation, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default \"/static/datavalidation/admin/static/media/exclamation.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 12,\n  cy: 12,\n  r: 11,\n  strokeWidth: 0\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M 7.5  12.18198052                  L 10.5  15.18198052                  L 16.5  9.18198052\",\n  fill: \"none\"\n}));\n\nvar SvgTick = function SvgTick(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    width: \"100%\",\n    stroke: \"white\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTick, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default \"/static/datavalidation/admin/static/media/tick.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from 'react';\nimport {FC, SVGProps} from 'react';\n\nimport {Status} from \"../data/enums\";\nimport {ReactComponent as Circle} from '../icons/circle-full.svg';\nimport {ReactComponent as Cross} from '../icons/cross.svg';\nimport {ReactComponent as Exclamation} from '../icons/exclamation.svg';\nimport {ReactComponent as Tick} from '../icons/tick.svg';\n\n\nconst getIcon = (status: Status): FC<SVGProps<SVGSVGElement>> => {\n    switch (status) {\n        case Status.UNINITIALIZED:\n            return Circle;\n        case Status.PASSING:\n            return Tick;\n        case Status.FAILING:\n            return Cross;\n        case Status.EXCEPTION:\n        case Status.WARNING:\n            return Exclamation;\n    }\n}\n\n\nexport const getStatusColour = (status: Status, onDark: boolean = false): string => {\n    switch (status) {\n        case Status.PASSING:\n            return onDark ? \"#00fe74\" : \"#009744\";\n        case Status.FAILING:\n            return onDark ? \"#500000\" : \"#8e0000\";\n        case Status.UNINITIALIZED:\n        case Status.EXCEPTION:\n            return onDark ? \"#c6d2cd\" : \"#7e8482\";\n        case Status.WARNING:\n            return onDark ? \"#fff409\" : \"#847e05\";\n    }\n}\n\n\nexport const getStatusContrastColour = (status: Status, onDark: boolean = false): string => {\n    switch (status) {\n        case Status.UNINITIALIZED:\n        case Status.PASSING:\n        case Status.EXCEPTION:\n        case Status.WARNING:\n            return onDark ? \"#696969\" : \"#fff\";\n        case Status.FAILING:\n            return \"#fff\";\n    }\n}\n\n\ninterface IStatusIndicator {\n    status: Status,\n    onDark: boolean\n}\n\n\nexport const StatusIcon: FC<IStatusIndicator> = ({\n    status, onDark\n}) => {\n    const icon = getIcon(status);\n    const fill = getStatusColour(status, onDark);\n    const stroke = getStatusContrastColour(status, onDark);\n    return React.createElement(icon, {className: \"icon\", fill, stroke});\n}\n\n\nexport const StatusIndicator: FC<IStatusIndicator> = ({\n    status, onDark\n}) => {\n    return (\n        <div className=\"vertical-align\">\n            <StatusIcon status={status} onDark={onDark}/>\n            <span style={{color: getStatusColour(status, onDark)}}>\n                {Status[status]}\n            </span>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport {Dispatch, FormEvent, SetStateAction} from \"react\";\n\nimport {IFailingObject, IFailingObjectPage, IValidator} from \"../data/interfaces\";\nimport {patchFailingObject, patchValidator} from \"../data/api\"\nimport {Status} from \"../data/enums\";\n\n\n/**\n * update the component state and patch changes to the REST API\n */\nfunction updateFailingObject(\n    id: number, property: string, value: any,\n    setPage: Dispatch<SetStateAction<IFailingObjectPage>>,\n    patch: boolean = true\n) {\n    setPage(prevState => ({\n        next: prevState.next,\n        results: prevState.results.map(failingObj => {\n            if (failingObj.id === id) {\n                const obj = {...failingObj, [property]: value} as IFailingObject;\n                patch && patchFailingObject(obj).catch(console.error);\n                return obj;\n            }\n            return failingObj;\n        })\n    }));\n}\n\n\n/**\n * handle the state change when the \"allowed to fail\" box is changed\n *\n * If the number allowed to fail is equal to the number failing then\n * the Status must be updated to PASSING and vice versa.\n */\nfunction updateAllowedToFail(\n    id: number,\n    validator_id: number,\n    allowed_to_fail: boolean,\n    setPage: Dispatch<SetStateAction<IFailingObjectPage>>,\n    setValidators: Dispatch<SetStateAction<IValidator[]>>,\n) {\n    updateFailingObject(id, \"allowed_to_fail\", allowed_to_fail, setPage);\n    setValidators(prevState => {\n        return prevState.map(validator => {\n            if (\n                validator.id !== validator_id ||\n                validator.num_allowed_to_fail === null ||\n                validator.num_failing === null\n            ) {\n                return validator;\n            }\n\n            const new_validator = {...validator};\n            if (allowed_to_fail) {\n                // @ts-ignore: possibly null\n                new_validator.num_allowed_to_fail += 1;\n                if (new_validator.num_failing === new_validator.num_allowed_to_fail) {\n                    new_validator.status = Status.PASSING;\n                    patchValidator(new_validator).catch(console.error);\n                }\n            } else {\n                // @ts-ignore: possibly null\n                new_validator.num_allowed_to_fail -= 1;\n                // @ts-ignore: possibly null\n                if (new_validator.num_failing === new_validator.num_allowed_to_fail + 1) {\n                    new_validator.status = Status.FAILING;\n                    patchValidator(new_validator).catch(console.error);\n                }\n            }\n            return new_validator;\n        })\n    });\n}\n\n\ninterface IFailingObjectEx extends IFailingObject {\n    validator_id: number,\n    setValidators: Dispatch<SetStateAction<IValidator[]>>\n    setFailingObjectPage: Dispatch<SetStateAction<IFailingObjectPage>>\n}\n\nexport const FailingObject: React.FC<IFailingObjectEx> = ({\n    id,\n    object_pk,\n    comment,\n    admin_page,\n    allowed_to_fail,\n    allowed_to_fail_justification,\n    validator_id,\n    setValidators,\n    setFailingObjectPage,\n}) => {\n    const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        updateAllowedToFail(\n            id, validator_id, event.target.checked,\n            setFailingObjectPage, setValidators\n        )\n    };\n\n    const [prevText, setPrevText] = React.useState<string|null>(null);\n    const textBox = React.useRef<HTMLDivElement|null>(null);\n\n    // patch changes to the REST API\n    const handleTextBoxChange = async (event: FormEvent<HTMLDivElement>) => {\n        const target = event.target as HTMLDivElement;\n        const text = target.textContent;\n        if (text !== prevText) {\n            setPrevText(text);\n            // wait 1 seconds for more changes before updating the object\n            // don't update state because that causes the component to\n            // rerender and the cursor to be reset at the beginning\n            setTimeout(() => {\n                const currText = textBox.current?.textContent;\n                if (currText === text) {\n                    patchFailingObject({\n                        id,\n                        \"validator\": validator_id,\n                        object_pk,\n                        comment,\n                        allowed_to_fail,\n                        \"allowed_to_fail_justification\": text,\n                    } as IFailingObject).catch(console.error);\n                }\n            }, 1000);\n        }\n    };\n\n    // update the state on Blur\n    const handleTextBoxBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n        const target = event.target as HTMLDivElement;\n        const text = target.textContent;\n        updateFailingObject(id, \"allowed_to_fail_justification\",\n                            text, setFailingObjectPage, false);\n    }\n\n    return (\n        <div style={{padding: \"5px 10px\", background: \"#ffe2f673\", borderBottom: \"1px solid #ffade5\"}}>\n            <table style={{width: \"100%\"}}>\n            <tbody>\n                <tr style={{verticalAlign: \"middle\", fontSize: \"10pt\", fontWeight: 600, maxHeight: \"25px\"}}>\n                    <td style={{padding: \"0 10px\", ...thin}}>{object_pk}</td>\n                    <td rowSpan={2} style={thin}>\n                        {admin_page\n                          ? <a href={admin_page} target=\"_blank\" rel=\"noopener noreferrer\">admin page</a>\n                          : \"admin_page\"}\n                    </td>\n                    <td style={{width: \"20%\", color: \"#8e0000\", fontWeight: 500, fontStyle: \"italic\"}}>\n                        {comment}\n                    </td>\n                    <td style={thin}>\n                        <input type=\"checkbox\"\n                               defaultChecked={allowed_to_fail}\n                               onChange={handleCheckboxChange}/>\n                    </td>\n                    <td rowSpan={3}>\n                        <div className=\"textarea-div\"\n                             contentEditable=\"true\"\n                             placeholder=\"justification if allowed to fail\"\n                             ref={textBox}\n                             onInput={handleTextBoxChange}\n                             onBlur={handleTextBoxBlur}\n                            suppressContentEditableWarning={true}>\n                            {allowed_to_fail_justification}\n                        </div>\n                    </td>\n                </tr>\n\n                <tr className=\"small-text\" style={{verticalAlign: \"top\", maxHeight: \"25px\"}}>\n                    <td style={thin}>object id</td>\n                    <td style={thin}>comment</td>\n                    <td style={thin}>allowed to fail</td>\n                </tr>\n\n                <tr style={{height: \"100%\"}}>{/* to expand with text area */}</tr>\n            </tbody>\n            </table>\n        </div>\n    );\n}\n\n\nconst thin: React.CSSProperties = {\n    width: \"10%\",\n}\n\n\nexport default FailingObject;\n","import * as React from 'react';\nimport {Dispatch, SetStateAction} from \"react\";\n\nimport {IFailingObjectPage, IValidator} from \"../data/interfaces\";\nimport {fetchFailingObjectsForValidator} from \"../data/api\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport {FailingObject} from \"./failing-object\";\n\n\ninterface IFailingObjectList {\n    validator_id: number,\n    setValidators: Dispatch<SetStateAction<IValidator[]>>\n}\n\n\nexport const FailingObjectList: React.FC<IFailingObjectList> = ({\n    validator_id,\n    setValidators,\n}) => {\n    const [page, setPage] = React.useState<IFailingObjectPage>({results: [], next: null});\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    /* load the initial page on component mount */\n    React.useEffect(() => {\n        (async function() {\n            setIsLoading(true);\n            await fetchFailingObjectsForValidator(validator_id, null, setPage);\n            setIsLoading(false);\n        })();\n    }, [validator_id]);\n\n    /* load subsequent-pages */\n    const loadNextPage = (event: React.MouseEvent<HTMLDivElement>) => {\n        (async function() {\n            setIsLoading(true);\n            await fetchFailingObjectsForValidator(null, page.next, setPage);\n            setIsLoading(false);\n        })();\n    }\n\n    return (\n        <>\n        {\n            page.results.map(obj =>\n                <FailingObject\n                    key={obj.id}\n                    {...obj}\n                    validator_id={validator_id}\n                    setValidators={setValidators}\n                    setFailingObjectPage={setPage} />\n            )\n        }\n        {isLoading &&\n            <div style={{width: \"100%\"}}>\n                 <Spinner animation=\"border\" role=\"status\" variant=\"primary\"\n                          style={{margin: \"5px 45%\"}} />\n            </div>\n        }\n        {(!isLoading) && (page.next !== null) &&\n            <div onClick={loadNextPage} style={loadMoreStyle}>\n                <div style={{width: \"100%\", textAlign: \"center\"}}>Load More...</div>\n            </div>\n        }\n        </>\n    );\n}\n\n\nconst loadMoreStyle: React.CSSProperties = {\n    cursor: \"pointer\",\n    padding: \"10px\",\n    fontWeight: 600,\n    fontSize: \"10pt\",\n    background: \"#ffe2f673\",\n    borderBottom: \"2px solid #ffade5\",\n}\n\n\nexport default FailingObjectList;\n","import * as React from \"react\";\nimport Accordian from \"react-bootstrap/Accordion\";\nimport Spinner from \"react-bootstrap/Spinner\"\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport {docco} from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nimport {Status} from \"../data/enums\";\nimport {IValidator} from \"../data/interfaces\";\nimport {StatusIcon, getStatusColour} from \"./status\";\nimport {parseDate, formatDate, formatSeconds} from \"../utils\";\nimport {FailingObjectList} from \"./failing-object-list\";\nimport {Dispatch, SetStateAction} from \"react\";\n\n\ninterface IValidatorEx extends IValidator {\n    totalObjectCount: number | null,\n    setValidators: Dispatch<SetStateAction<IValidator[]>>\n}\n\n\nexport const Validator: React.FC<IValidatorEx> = ({\n    id,\n    method_name,\n    description,\n    last_run_time,\n    execution_time,\n    status,\n    num_passing,\n    num_failing,\n    num_na,\n    num_allowed_to_fail,\n    exc_type,\n    exc_traceback,\n    exc_obj_pk,\n    totalObjectCount,\n    setValidators,\n}) => {\n    const isException = exc_type !== null;\n\n    const all_null = (num_passing === null) && (num_failing === null) && (num_na === null);\n    if (all_null) {\n        num_allowed_to_fail = null;\n    }\n\n    const totalValidated = (num_passing !== null) && (num_failing !== null) && (num_na !== null)\n        ? num_passing + num_failing + num_na\n        : null;\n\n    const totalUnvalidated = (totalObjectCount !== null) && (totalValidated !== null)\n        ? totalObjectCount - totalValidated\n        : null;\n\n    const last_run_time_fmt = last_run_time\n        ? formatDate(parseDate(last_run_time), \"%Y-%m-%d %H:%M:%S\")\n        : \"N/A\";\n\n    const cursor = exc_traceback || ((num_failing || 0) > 0) ? \"pointer\" : \"default\"\n\n    return (\n        <Accordian defaultActiveKey=\"\" style={{marginBottom: \"10px\"}}>\n            <Accordian.Toggle as=\"div\" eventKey=\"0\" className=\"vertical-align\" style={{cursor, ...style}}>\n                <table style={{width: \"100%\", tableLayout: \"fixed\"}}>\n                <tbody>\n                    <tr style={{verticalAlign: \"middle\", fontSize: \"11pt\", fontWeight: 600}}>\n                        <td className=\"no-overflow\" style={wide} title={method_name}> {method_name} </td>\n                        <td rowSpan={2} style={{width: \"5%\"}}> <StatusIcon status={status} onDark={false} /> </td>\n                        <td style={{fontSize: \"10pt\", fontWeight: \"normal\", ...col2}}> {last_run_time_fmt} </td>\n                        <td style={{fontSize: \"10pt\", fontWeight: \"normal\", ...thin}}> {formatSeconds(execution_time)} </td>\n                        {!isException &&\n                        <>\n                            <td style={thin}>{num_passing}</td>\n                            <td style={thin}>{num_failing}</td>\n                            <td style={thin}>{num_na}</td>\n                            <td style={thin}>{num_allowed_to_fail}</td>\n                            <td style={thin}>\n                                {\n                                    totalObjectCount === undefined\n                                       ? <Spinner animation=\"border\" role=\"status\" variant=\"primary\" />\n                                       : totalUnvalidated\n                                }\n                            </td>\n                        </>\n                        }\n                        {isException &&\n                            <td rowSpan={2} style={{width: \"50%\", color: getStatusColour(Status.EXCEPTION)}}>\n                                {exc_type}\n                                {exc_obj_pk === null ? \"\" : ` at object id: ${exc_obj_pk}`}\n                            </td>\n                        }\n                        <td> </td>\n                    </tr>\n\n                    <tr className=\"small-text\" style={{verticalAlign: \"top\"}}>\n                        <td style={wide}>{description}</td>\n                        <td style={col2}>last run time</td>\n                        <td style={thin}>execution time (s)</td>\n                        {!isException &&\n                        <>\n                            <td style={thin}>passing</td>\n                            <td style={thin}>failing</td>\n                            <td style={thin}>N/A</td>\n                            <td style={thin}>allowed to fail</td>\n                            <td style={thin}>unvalidated</td>\n                        </>\n                        }\n                        <td>{/* to fill remaining column space */}</td>\n                    </tr>\n                </tbody>\n                </table>\n            </Accordian.Toggle>\n\n            <Accordian.Collapse eventKey=\"0\">\n                <>\n                {exc_traceback &&\n                    <SyntaxHighlighter language=\"python\" style={docco}>\n                         {exc_traceback}\n                    </SyntaxHighlighter>\n                }\n                {(!isException) && ((num_failing || 0) > 0) &&\n                    <FailingObjectList validator_id={id} setValidators={setValidators} />\n                }\n                </>\n            </Accordian.Collapse>\n        </Accordian>\n    )\n}\n\n\nconst style: React.CSSProperties = {\n    padding: \"10px 0\",\n    background: \"#fff\",\n    fontWeight: 500,\n    fontSize: \"14pt\",\n    color: \"#000\",\n    borderBottom: \"1px solid #ebebeb\",\n};\n\n\nconst wide: React.CSSProperties = {\n    width: \"20%\",\n}\n\nconst col2: React.CSSProperties = {\n    width: \"10%\",\n}\n\nconst thin: React.CSSProperties = {\n    width: \"10%\",\n}\n\n\nexport default Validator;","import * as React from \"react\";\nimport {Dispatch, SetStateAction} from \"react\";\nimport Accordian from \"react-bootstrap/Accordion\";\n\nimport {Status} from \"../data/enums\";\nimport {StatusIndicator} from \"./status\";\nimport {fetchTotalObjectCount} from \"../data/api\";\nimport {IValidator} from \"../data/interfaces\";\nimport {Validator} from \"./validator\";\n\n\nexport interface IModel {\n    appLabel: string,\n    modelName: string,\n    status: Status,\n    validators: IValidator[],\n}\n\n\ninterface IModelEx extends IModel {\n    setValidators: Dispatch<SetStateAction<IValidator[]>>\n}\n\n\n/**\n * A row for each model displaying the data validation status\n */\nexport const Model: React.FC<IModelEx> = ({\n    appLabel,\n    modelName,\n    status,\n    validators,\n    setValidators,\n}) => {\n    const [totalObjectCount, setTotalObjectCount] = React.useState<number|null>(null);\n\n    React.useEffect(() => {\n        fetchTotalObjectCount(appLabel, modelName, setTotalObjectCount).then();\n    }, [appLabel, modelName]);\n\n    return (\n        <Accordian defaultActiveKey=\"\" style={{marginBottom: \"10px\"}}>\n            <Accordian.Toggle as=\"div\" eventKey=\"0\" className=\"vertical-align\" style={style}>\n                <div className=\"no-overflow\" style={{width: \"20%\"}} title={modelName}> {modelName} </div>\n                <StatusIndicator status={status} onDark={false} />\n            </Accordian.Toggle>\n            <Accordian.Collapse eventKey=\"0\">\n                <div> {\n                    Object.values(validators).map(valinfo =>\n                        <Validator\n                            key={`${appLabel}.${modelName}.${valinfo.method_name}`}\n                            totalObjectCount={totalObjectCount}\n                            {...valinfo}\n                            setValidators={setValidators}\n                        />\n                    )\n                } </div>\n            </Accordian.Collapse>\n        </Accordian>\n    )\n}\n\n\nconst style: React.CSSProperties = {\n    cursor: \"pointer\",\n    padding: \"10px\",\n    background: \"#ebebeb\",\n    fontWeight: 600,\n    fontSize: \"14pt\",\n    color: \"#000\",\n};\n\n\nexport default Model;","import * as React from \"react\";\nimport {Dispatch, SetStateAction} from \"react\";\nimport Accordian from \"react-bootstrap/Accordion\";\n\nimport {Status} from \"../data/enums\";\nimport {StatusIndicator} from \"./status\";\nimport {IValidator} from \"../data/interfaces\";\nimport {Model, IModel} from \"./model\";\n\n\nexport interface IApp {\n    appLabel: string,\n    status: Status,\n    models: {\n        [modelName: string]: IModel,\n    }\n}\n\n\ninterface IAppEx extends IApp {\n    setValidators: Dispatch<SetStateAction<IValidator[]>>\n}\n\n\nexport const App: React.FC<IAppEx> = ({\n    appLabel,\n    status,\n    models,\n    setValidators,\n}) => {\n    return (\n        <Accordian defaultActiveKey=\"\" style={{minWidth: \"1000px\", marginBottom: \"10px\"}}>\n            <Accordian.Toggle as=\"div\" eventKey=\"0\" className=\"vertical-align\" style={style}>\n                <div className=\"no-overflow\" style={{width: \"20%\"}} title={appLabel}> {appLabel} </div>\n                <StatusIndicator status={status} onDark={true} />\n            </Accordian.Toggle>\n            <Accordian.Collapse eventKey=\"0\">\n                <div> {\n                    Object.entries(models).map(([modelName, info]) =>\n                        <Model\n                            key={`${appLabel}.${modelName}`}\n                            appLabel={appLabel}\n                            modelName={modelName}\n                            status={info.status}\n                            validators={info.validators}\n                            setValidators={setValidators}\n                        />\n                    )\n                } </div>\n            </Accordian.Collapse>\n        </Accordian>\n    )\n}\n\n\nconst style: React.CSSProperties = {\n    cursor: \"pointer\",\n    padding: \"10px\",\n    background: \"#417690\",\n    fontWeight: 600,\n    fontSize: \"14pt\",\n    color: \"white\",\n};\n\n\nexport default App;","import * as React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport {fetchCSRFInfo, fetchValidators} from \"../data/api\";\nimport {Status} from \"../data/enums\";\nimport {IValidator} from \"../data/interfaces\";\nimport App, {IApp} from \"./app\";\nimport {IModel} from \"./model\";\n\n\ninterface IAppList {\n    [appLabel: string]: IApp,\n}\n\n\n/**\n * takes a flat list of Validators and converts it to a nested\n * structure (IAppList) that maps appLabels -> models -> validators\n */\nfunction buildNestedValidatorSummary(validators: IValidator[]): IAppList {\n    const result = {} as IAppList;\n\n    for (const validator of validators) {\n        if (!result.hasOwnProperty(validator.app_label)) {\n            result[validator.app_label] = {\n                appLabel: validator.app_label,\n                status: Status.UNINITIALIZED,\n                models: {}\n            } as IApp;\n        }\n        const app = result[validator.app_label];\n\n        if (!app.models.hasOwnProperty(validator.model_name)) {\n            app.models[validator.model_name] = {\n                appLabel: validator.app_label,\n                modelName: validator.model_name,\n                status: Status.UNINITIALIZED,\n                validators: []\n            } as IModel\n        }\n        app.models[validator.model_name].validators.push(validator);\n    }\n\n    // update the status for each App and Model level summary\n    type HasStatus = {status: Status};\n    const aggregateStatus = (parent: HasStatus, children: HasStatus[]) => {\n        for (const child of children) {\n            if (child.status === Status.PASSING &&\n                parent.status === Status.UNINITIALIZED) {\n                parent.status = Status.PASSING\n            }\n            else if (child.status === Status.FAILING) {\n                parent.status = Status.FAILING ;\n            }\n            else if (child.status === Status.EXCEPTION) {\n                parent.status = Status.EXCEPTION;\n                break;\n            }\n        }\n    }\n    for (const app of Object.values(result)) {\n        for (const model of Object.values(app.models)) {\n            aggregateStatus(model, model.validators);\n        }\n        aggregateStatus(app, Object.values(app.models));\n    }\n\n    return result;\n}\n\n\n/**\n * A list of django apps and their data validation results\n */\nexport const AppList: React.FC = () => {\n    const [validators, setValidators] = React.useState([] as IValidator[]);\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    React.useEffect(() => {\n        (async function() {await fetchCSRFInfo()})();\n    }, []);\n\n    React.useEffect(() => {\n        (async function() {\n            setIsLoading(true);\n            await fetchValidators(setValidators).then();\n            setIsLoading(false);\n        })();\n    }, []);\n\n    const appList = buildNestedValidatorSummary(validators);\n\n    if (isLoading) {\n        return (\n            <div style={{position: \"relative\"}}>\n                <Spinner\n                    animation=\"border\" role=\"status\" variant=\"primary\"\n                    style={{position: \"absolute\", left: \"50%\"}}\n                />\n            </div>\n        );\n    }\n    return (\n        <>\n            <h2 style={{marginBottom: \"10px\", color: \"#417690\"}}> Data Validation Summary </h2>\n             {\n                Object.values(appList).map(app =>\n                    <App\n                        key={app.appLabel}\n                        appLabel={app.appLabel}\n                        status={app.status}\n                        models={app.models}\n                        setValidators={setValidators}\n                    />\n                )\n            }\n        </>\n    );\n}\n\n\nexport default AppList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport AppList from './components/app-list';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppList />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}